{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-55f048e028a4d3a9.js","node_modules/@parcel/runtime-js/lib/runtime-e375b20c581780c8.js","node_modules/@parcel/runtime-js/lib/runtime-ca17c16d77d13c47.js","node_modules/@parcel/runtime-js/lib/runtime-9304a39a1b7efa6b.js","src/utils.js","src/helpers.js","src/script.js","src/loadMore.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kb9mm\\\":\\\"index.ed8c6f6e.js\\\",\\\"4rlpt\\\":\\\"Hospital-icon.d4be522e.png\\\",\\\"ftTzp\\\":\\\"Phone-icon-blue.65abe1c6.png\\\",\\\"631Mr\\\":\\\"Link-icon.6da16e61.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4rlpt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ftTzp\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"631Mr\")).toString();","export const BASE_URL = \"https://gc-interview.azurewebsites.net/api/consultantlisting\";\nexport const TIMEOUT_SEC = 10;","//settimeout function- it will race with api call function either APi call will be made in 10 seconds or Error message will be displayed\nimport {\n  TIMEOUT_SEC\n} from \"./utils.js\";\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} seconds.`));\n    }, s * 1000)\n  })\n}\n\n//API call\nexport const getJSON =\n  async function (url) {\n    try {\n      //loading api\n      const response = await Promise.race([fetch(url), timeout(TIMEOUT_SEC)]);\n      const data = await response.json();\n      if (!response.ok) throw new Error(`(${response.status})`);\n      return data;\n    } catch (err) {\n      throw err;\n    }\n  };","import * as text from \"./loadMore.js\";\nimport hospitalImage from \"url:./img/Hospital-icon.png\";\nimport phoneImage from \"url:./img/Phone-icon-blue.png\";\nimport linkImage from \"url:./img/Link-icon.png\";\nimport {\n  BASE_URL\n} from \"./utils.js\";\nimport {\n  getJSON\n} from './helpers.js';\n\n//Global Vaiables \nlet constants = {\n  'page': 1, //initial page no\n  'item_per_page': 5 //no of items to display\n}\n\n\nlet showConsultantDetails = []\n\n//Fetch Data Call\nasync function consultantDetails() {\n  try {\n    showConsultantDetails = await getJSON(BASE_URL);\n  } catch (err) {\n    console.log(err);\n  }\n};\nconsultantDetails().then(() => {\n  buildHtml()\n});\n\n//This function trims the api data and calculates number of pages required\nfunction pagination(querySet, page, item_per_page) {\n  let trimStart = (page - 1) * item_per_page;\n  let trimEnd = trimStart + item_per_page;\n  let trimmedData = querySet.slice(trimStart, trimEnd)\n  let pages = Math.round(querySet.length / item_per_page);\n  return {\n    'querySet': trimmedData,\n    'pages': pages,\n  }\n}\n\n//Function to loop through page buttons and render data \nfunction pageButtons(pages) {\n  let wrapper = document.getElementById('pagination-wrapper')\n  wrapper.innerHTML = ``\n  for (let page = 1; page <= pages; page++) {\n    wrapper.innerHTML += `<button value=${page} class=\"page page-link\">${page}</button>`\n  }\n  let wrapper2 = document.getElementById('consultant');\n\n  let buttons = document.querySelectorAll(\".page\");\n  buttons.forEach(function (btn, index) {\n    btn.addEventListener(\"click\", shownumber(index));\n  })\n\n  function shownumber(index) {\n    constants.page = Number(index + 1);\n    buildHtml();\n\n  }\n}\n//function to show the results query string\nfunction resultsQuery() {\n  start_index = ((constants.page - 1) * constants.item_per_page) + 1;\n  end_index = (start_index + constants.item_per_page) - 1;\n  if (end_index > showConsultantDetails.length) {\n    end_index = showConsultantDetails.length;\n  }\n  let results = document.getElementById('results')\n  results.innerHTML = ``\n  results.innerHTML += `Showing <span class=\"text-blue\">${start_index}</span> to <span class=\"text-blue\">${end_index}</span> of <span class=\"text-blue\">${showConsultantDetails.length}</span> results`\n}\n\n//Renders the data fetch from the API\nfunction buildHtml() {\n  let state = {\n    'querySet': showConsultantDetails,\n  }\n\n  let data = pagination(state.querySet, constants.page, constants.item_per_page);\n  // create html\n  let myList = data.querySet;\n  let consultantData = \"\";\n  myList.map(info => {\n    consultantData += `<div class=\"consultant__info\">\n    <div class=\"consultant__info--summary\">\n        <div class=\"consultant__info--details\">\n          <div>\n            <img class=\"consultant__info--img\" src=${info.ProfileImage} alt= \"${info.Title}\" />\n          </div>\n          <div class=\"consultant__info--addressWrapper\">\n            <h2 class=\"consultant__info--title\">${info.Title} - ${info.Specialty}</h2>\n            <p class=\"consultant__info--location\">\n            <span><img class=\"consultant__info--icon\" src=${hospitalImage} alt=\"Hospital\"></span>Based at: ${info.Hospital} â€¢ 9 Miles</p>\n            <div class=\"consultant__info--contact\">\n              <a class=\"consultant__info--contactPhone\" href=\"tel:${info.PhoneNo}\"><span><img src=${phoneImage} alt=\"Phone Number\" class=\"consultant__info--icon\" ></span>${info.PhoneNo}</a>\n              <a class=\"consultant__info--contactWebsite\" href=\"#\"><span><img src=${linkImage} alt=\"Website address\" class=\"consultant__info--icon\" ></span>Go to hospital website</a>\n              <a class=\"consultant__info--contactDirections\" href=#><span><img src=${linkImage} alt=\"Get Directions\" class=\"consultant__info--icon\" ></span>Get directions</a>\n            </div>\n          </div>\n        </div>\n        <div class=\"consultant__info--background\">\n        <p>${info.ProfessionalBackground}</p>\n        </div>\n            <span class=\"read-more-btn\">View More</span>\n  </div>\n  <div class=\"consultant__info--buttonGroup\">\n  <button class=\"btn btn--outline\">View Full Profile</button>\n  <button class=\"btn \">Book an appointment</button>\n  </div>\n      </div>`;\n  });\n  document.getElementById(\"consultant\").innerHTML = consultantData;\n  pageButtons(data.pages);\n  resultsQuery();\n}\n\n//Load more text function\ntext.loadMore();","//load more consultant data function\nexport function loadMore() {\n  const parentContainer = document.querySelector('.consultant');\n\n  parentContainer.addEventListener('click', event => {\n    const current = event.target;\n    const isReadMoreBtn = current.className.includes('read-more-btn');\n    if (!isReadMoreBtn) return;\n\n    const currentText = event.target.parentNode.querySelector('.consultant__info--background');\n    currentText.classList.toggle('read-more-text--show');\n    current.textContent = current.textContent.includes('View More') ? \"View Less\" : \"View More \";\n  })\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1f495ef0554d5dd1$exports","URL","resolve","url","toString","$cc2697c1dcbd6dc9$exports","$cf5e7119ffc07056$exports","$820877bea407f5fe$export$ca6dda5263526f75","$3fd197433a741b8c$export$d047a7c56db64af4","async","response","Promise","race","fetch","s","_","reject","setTimeout","data","json","ok","status","err","$b63be9b0371e788c$var$constants","page","item_per_page","$b63be9b0371e788c$var$showConsultantDetails","$b63be9b0371e788c$var$pageButtons","pages","wrapper","document","getElementById","innerHTML","querySelectorAll","forEach","btn","index","addEventListener","Number","$b63be9b0371e788c$var$buildHtml","shownumber","querySet","trimStart","trimEnd","slice","Math","round","$b63be9b0371e788c$var$pagination","myList","consultantData","map","info","ProfileImage","Title","Specialty","$parcel$interopDefault","Hospital","PhoneNo","ProfessionalBackground","start_index","end_index","results","$b63be9b0371e788c$var$resultsQuery","console","log","$b63be9b0371e788c$var$consultantDetails","then","querySelector","event","current","target","className","includes","parentNode","classList","toggle","textContent"],"version":3,"file":"index.ed8c6f6e.js.map"}